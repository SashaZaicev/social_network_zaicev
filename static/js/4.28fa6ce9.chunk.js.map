{"version":3,"sources":["hoc/withAuthRedirect.js","components/Dialogs/Dialogs.module.css","components/Dialogs/DialogForm.js","components/Dialogs/Dialogs.jsx","components/Dialogs/DialogsContainer.jsx"],"names":["mstpForRedirect","state","isAuth","auth","withAuthRedirect","Component","RedirectComponent","_React$Component","Object","D_study_social_network_zaicev_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_0__","this","D_study_social_network_zaicev_node_modules_babel_runtime_helpers_esm_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_2__","D_study_social_network_zaicev_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_3__","apply","arguments","D_study_social_network_zaicev_node_modules_babel_runtime_helpers_esm_inherits__WEBPACK_IMPORTED_MODULE_4__","D_study_social_network_zaicev_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_1__","key","value","props","react__WEBPACK_IMPORTED_MODULE_5___default","a","createElement","react_router__WEBPACK_IMPORTED_MODULE_6__","to","React","connect","module","exports","dialogs","h3","dialogsItems","user","activeLink","userLogo","messages","message","maxLength50","maxLengthCreator","AddMessageFormRedux","reduxForm","form","react_default","onSubmit","handleSubmit","Field","component","Textarea","name","placeholder","validate","required","DialogItem","path","id","className","concat","s","src","logoImg","react_router_dom","activeClassName","Messages","Dialogs","dialogsItem","messageList","dialogsData","map","d","Dialogs_DialogItem","logo","messagesItem","messagesData","m","Dialogs_Messages","addPost2","newComment","compose","dialogPage","dispatch","addMessageAC","updateComment","text","updateCommentAC"],"mappings":"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","file":"static/js/4.28fa6ce9.chunk.js","sourcesContent":["import React from 'react';\r\nimport {Redirect} from \"react-router\";\r\nimport {connect} from \"react-redux\";\r\n\r\nconst mstpForRedirect = (state) => ({\r\n    isAuth: state.auth.isAuth,\r\n});\r\nexport const withAuthRedirect = (Component) => {\r\n    class RedirectComponent extends React.Component {\r\n        render() {\r\n            if (!this.props.isAuth) return <Redirect to={'/login'}/>;\r\n            return <Component {...this.props}/>\r\n        }\r\n    }\r\n\r\n    let ConectedAuthRedirectComponent = connect (mstpForRedirect)(RedirectComponent);\r\n    return ConectedAuthRedirectComponent;\r\n};\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs\":\"Dialogs_dialogs___ZUcC\",\"h3\":\"Dialogs_h3__xeqIs\",\"dialogsItems\":\"Dialogs_dialogsItems__3cRl6\",\"user\":\"Dialogs_user__6DgmK\",\"activeLink\":\"Dialogs_activeLink__3t12d\",\"userLogo\":\"Dialogs_userLogo__39A1z\",\"messages\":\"Dialogs_messages__3kz98\",\"message\":\"Dialogs_message__IomOI\"};","import React from 'react';\r\nimport s from \"./Dialogs.module.css\";\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport {maxLengthCreator, required} from \"../../utils/validators/validators\";\r\nimport {Textarea} from \"../Common/FormsControls/FormsControls\";\r\nlet maxLength50=maxLengthCreator(50);\r\n\r\nexport const AddDialogForm = (props) => {\r\n    return (\r\n        <form onSubmit={props.handleSubmit}>\r\n            <div>\r\n                <Field  component={Textarea} name='newComment' placeholder='Enter your message' validate={[required,maxLength50]}/>\r\n\r\n            </div>\r\n            <div>\r\n                <button>Add post</button>\r\n            </div>\r\n        </form>)\r\n};\r\nexport const AddMessageFormRedux = reduxForm({form: 'addDialogForm'})(AddDialogForm)\r\n// export default AddDialogForm\r\n\r\n// export default AddDialogForm\r\n","import React from 'react';\r\nimport s from './Dialogs.module.css';\r\nimport {NavLink, Redirect} from \"react-router-dom\";\r\nimport {AddDialogForm, AddMessageFormRedux} from \"./DialogForm\";\r\n// import {addCommentAC} from \"../../redux/profilePageReducer\";\r\n// import {addMessageAC, updateCommentAC} from \"../../redux/dialogPageReducer\";\r\n// import {connect} from \"react-redux\";\r\n// import {addMessage} from \"../../redux/State\";\r\n// import Dialog from './Dialog/Dialog'\r\n\r\nconst DialogItem = (props) => {\r\n    let path = '/dialogs/' + props.id;\r\n    return <div className={`${s.user}`}>\r\n        <div className={`${s.userLogo}`}><img src={props.logoImg}/></div>\r\n        <NavLink to={path} activeClassName={s.activeLink}>\r\n            {props.name}\r\n        </NavLink>\r\n    </div>\r\n}\r\nconst Messages = (props) => {\r\n    return (<div className={s.message}>\r\n        {props.name}\r\n\r\n    </div>)\r\n}\r\n\r\n\r\nconst Dialogs = (props) => {\r\n\r\n    const addNewMessage = (value) => {\r\n        props.addPost2(value.newComment)\r\n    }\r\n    let dialogsItem =\r\n        props.messageList.dialogsData.map((d) => <DialogItem name={d.name} key={d.id} logoImg={d.logo}/>);\r\n    let messagesItem = props.messageList.messagesData.map((m) => <Messages name={m.name}/>)\r\n    // let newMessageElement = React.createRef();\r\n\r\n// if (!props.isAuth) return <Redirect to = {'/login'}/>;\r\n    return (\r\n        <div className={s.dialogs}>\r\n            <div className={s.dialogsItems}>\r\n                <h3 className={s.h3}>dialogs</h3>\r\n                {dialogsItem}\r\n            </div>\r\n            <div className={s.messages}>\r\n                {messagesItem}\r\n            </div>\r\n            <div>\r\n                <AddMessageFormRedux onSubmit={addNewMessage}/>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\nexport default Dialogs;","import React from 'react';\r\nimport {addMessageAC, updateCommentAC} from \"../../redux/dialogPageReducer\";\r\nimport {connect} from \"react-redux\";\r\nimport Dialogs from \"./Dialogs\";\r\nimport {Redirect} from \"react-router\";\r\nimport {withAuthRedirect} from \"../../hoc/withAuthRedirect\";\r\nimport {compose} from \"redux\";\r\n\r\n\r\nconst mstp = (state) => ({\r\n    messageList: state.dialogPage,\r\n    newComment: state.dialogPage.newComment,\r\n    // isAuth: state.auth.isAuth\r\n})\r\nconst mdtp = (dispatch) => ({\r\n    addPost2: (newComment) =>\r\n        dispatch(addMessageAC(newComment)),\r\n    updateComment: (text) =>\r\n        dispatch(updateCommentAC(text))\r\n})\r\n// let AuthRedirectComponent = withAuthRedirect(Dialogs)\r\n// const DialogsContainer = connect(mstp, mdtp)(AuthRedirectComponent);\r\nexport default compose(connect(mstp, mdtp),withAuthRedirect)(Dialogs);"],"sourceRoot":""}
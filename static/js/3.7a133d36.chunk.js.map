{"version":3,"sources":["hoc/withAuthRedirect.js","components/Profile/ProfileInfo/ProfileInfo.module.css","components/Profile/MyPosts/MyPosts.module.css","components/Profile/MyPosts/Post/Post.module.css","components/Profile/ProfileInfo/ProfileStatus.jsx","components/Profile/ProfileInfo/ProfileInfo.jsx","components/Profile/MyPosts/Post/Post.jsx","components/Profile/MyPosts/MyPostForm.js","components/Profile/MyPosts/MyPosts.jsx","components/Profile/MyPosts/MyPostsContainer.jsx","components/Profile/Profile.jsx","components/Profile/ProfileContainer.jsx"],"names":["mstpForRedirect","state","isAuth","auth","withAuthRedirect","Component","RedirectComponent","_React$Component","Object","D_study_social_network_zaicev_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_inherits__WEBPACK_IMPORTED_MODULE_3__","_super","D_study_social_network_zaicev_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_createSuper__WEBPACK_IMPORTED_MODULE_2__","D_study_social_network_zaicev_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_0__","this","apply","arguments","D_study_social_network_zaicev_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_1__","key","value","props","react__WEBPACK_IMPORTED_MODULE_4___default","a","createElement","react_router__WEBPACK_IMPORTED_MODULE_5__","to","React","connect","module","exports","imgBack","description","avatar","fotoProfile","textareaSize","myPosts","posts","item","ProfileStatus","editMode","status","_this","activateEditMode","setState","deactivateEditMode","updateStatus","onStatusChange","e","currentTarget","prevProps","prevState","react_default","onDoubleClick","onChange","autoFocus","onBlur","ProfileInfo","profile","Preloader","foto","photos","small","photoMan","src","alt","className","s","fullName","lookingForAJob","ProfileInfo_ProfileStatus","Post","message","likeCount","maxLength10","maxLengthCreator","AddPostForm","onSubmit","handleSubmit","Field","component","Textarea","name","validate","required","placeholder","AddPostFormRedux","reduxForm","form","MyPosts","createRef","postItem","myPost","messagesList","map","m","MyPosts_Post_Post","addPost","newMessage","MyPostsContainer","profilePage","dispatch","addCommentAC","updatePost","textPost","updatePostAC","Profile","Profile_ProfileInfo_ProfileInfo","MyPosts_MyPostsContainer","ProfileContainer","userId","match","params","autorizedUserId","history","push","getUserProfile","getStatus","components_Profile_Profile","assign","compose","withRouter"],"mappings":"8LAIMA,EAAkB,SAACC,GAAD,MAAY,CAChCC,OAAQD,EAAME,KAAKD,SAEVE,EAAmB,SAACC,GAAc,IACrCC,EADqC,SAAAC,GAAAC,OAAAC,EAAA,EAAAD,CAAAF,EAAAC,GAAA,IAAAG,EAAAF,OAAAG,EAAA,EAAAH,CAAAF,GAAA,SAAAA,IAAA,OAAAE,OAAAI,EAAA,EAAAJ,CAAAK,KAAAP,GAAAI,EAAAI,MAAAD,KAAAE,WAAA,OAAAP,OAAAQ,EAAA,EAAAR,CAAAF,EAAA,EAAAW,IAAA,SAAAC,MAAA,WAGnC,OAAKL,KAAKM,MAAMjB,OACTkB,EAAAC,EAAAC,cAACjB,EAAcQ,KAAKM,OADIC,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAUC,GAAI,eAHVlB,EAAA,CACXmB,IAAMpB,WAQtC,OADoCqB,YAAS1B,EAAT0B,CAA0BpB,yBCdlEqB,EAAAC,QAAA,CAAkBC,QAAA,6BAAAC,YAAA,iCAAAC,OAAA,4BAAAC,YAAA,uDCAlBL,EAAAC,QAAA,CAAkBK,aAAA,8BAAAC,QAAA,yBAAAC,MAAA,mECAlBR,EAAAC,QAAA,CAAkBQ,KAAA,4JCoDHC,8MAjDXpC,MAAQ,CACJqC,UAAU,EACVC,OAAQC,EAAKrB,MAAMoB,UAEvBE,iBAAmB,WACfD,EAAKE,SAAS,CACVJ,UAAU,OAGlBK,mBAAqB,WACjBH,EAAKE,SAAS,CACVJ,UAAU,EACVC,OAAQC,EAAKrB,MAAMoB,SAEvBC,EAAKrB,MAAMyB,aAAaJ,EAAKvC,MAAMsC,WAEvCM,eAAiB,SAACC,GACtBN,EAAKE,SAAS,CAACH,OAAQO,EAAEC,cAAc7B,0EAEpB8B,EAAWC,GACtBD,EAAUT,SAAW1B,KAAKM,MAAMoB,QAChC1B,KAAK6B,SAAS,CACVH,OAAQ1B,KAAKM,MAAMoB,0CAQvB,OACIW,EAAA7B,EAAAC,cAAA,YACMT,KAAKZ,MAAMqC,UACbY,EAAA7B,EAAAC,cAAA,WACI4B,EAAA7B,EAAAC,cAAA,QAAM6B,cAAetC,KAAK4B,kBAAmB5B,KAAKM,MAAMoB,QAAU,SAGrE1B,KAAKZ,MAAMqC,UACZY,EAAA7B,EAAAC,cAAA,WACI4B,EAAA7B,EAAAC,cAAA,SAAO8B,SAAUvC,KAAKgC,eAAgBQ,WAAW,EAAMC,OAAQzC,KAAK8B,mBAAoBzB,MAAOL,KAAKZ,MAAMsC,kBAxClGd,IAAMpB,6BCwCnBkD,EAxBK,SAACpC,GACjB,IAAKA,EAAMqC,QACP,OAAON,EAAA7B,EAAAC,cAACmC,EAAA,EAAD,MAEX,IAAMC,EAAqC,MAA9BvC,EAAMqC,QAAQG,OAAOC,MAC5BzC,EAAMqC,QAAQG,OAAOC,MACrBC,IACV,OACQX,EAAA7B,EAAAC,cAAA,WACI4B,EAAA7B,EAAAC,cAAA,WACI4B,EAAA7B,EAAAC,cAAA,OACIwC,IAAI,mGACJC,IAAI,SAASC,UAAWC,IAAEpC,WAElCqB,EAAA7B,EAAAC,cAAA,OAAK0C,UAAWC,IAAEnC,aACfoB,EAAA7B,EAAAC,cAAA,WAAK4B,EAAA7B,EAAAC,cAAA,OAAK0C,UAAWC,IAAEjC,YAAa8B,IAAKJ,IACrCR,EAAA7B,EAAAC,cAAA,WAAMH,EAAMqC,QAAQU,UACpBhB,EAAA7B,EAAAC,cAAA,WAAMH,EAAMqC,QAAQW,iBAEvBjB,EAAA7B,EAAAC,cAAC8C,EAAD,CAAe7B,OAAQpB,EAAMoB,OAAQK,aAAczB,EAAMyB,sDCnB1DyB,EAhBF,SAAClD,GACZ,OAEE+B,EAAA7B,EAAAC,cAAA,OAAK0C,UAAWC,IAAE7B,MAChBc,EAAA7B,EAAAC,cAAA,OAAKwC,IAAI,wEAAwEC,IAAI,KACpF5C,EAAMmD,QACPpB,EAAA7B,EAAAC,cAAA,WAEE4B,EAAA7B,EAAAC,cAAA,oBACEH,EAAMoD,uDCPZC,EAAYC,YAAiB,IAE3BC,EAAc,SAACvD,GACjB,OACI+B,EAAA7B,EAAAC,cAAA,QAAMqD,SAAUxD,EAAMyD,cAClB1B,EAAA7B,EAAAC,cAAA,WACI4B,EAAA7B,EAAAC,cAACuD,EAAA,EAAD,CAAOC,UAAWC,IAAUC,KAAK,aAAaC,SAAU,CAACC,IAAUV,GAAcW,YAAY,qBAEjGjC,EAAA7B,EAAAC,cAAA,WACI4B,EAAA7B,EAAAC,cAAA,6BAIH8D,EAAmBC,YAAU,CAACC,KAAM,eAAjBD,CAAiCX,GCsCjDa,EA/CA,SAACpE,GAEQM,IAAM+D,YAA3B,IACIC,EAAWtE,EAAMuE,OAAOC,aAAaC,IAAI,SAACC,GAAD,OAAO3C,EAAA7B,EAAAC,cAACwE,EAAD,CAAMxB,QAASuB,EAAEvB,QAASC,UAAWsB,EAAEtB,cAoB3F,OACIrB,EAAA7B,EAAAC,cAAA,OAAK0C,UAAWC,IAAE/B,SACdgB,EAAA7B,EAAAC,cAAA,sBACA4B,EAAA7B,EAAAC,cAAA,WAYI4B,EAAA7B,EAAAC,cAAC8D,EAAD,CAAkBT,SAlBf,SAACzD,GAChBC,EAAM4E,QAAQ7E,EAAM8E,gBAmBZ9C,EAAA7B,EAAAC,cAAA,OAAK0C,UAAWC,IAAE9B,OACbsD,KC9BFQ,EADQvE,YAVV,SAACzB,GAAD,MAAY,CACrByF,OAAQzF,EAAMiG,YACdF,WAAY/F,EAAMiG,YAAYF,aAErB,SAACG,GAAD,MAAe,CACxBJ,QAAS,SAACC,GAAD,OAAgBG,EAASC,YAAaJ,KAC/CK,WAAY,SAACC,GAAD,OAAcH,EAASI,YAAaD,OAI7B5E,CAAqB6D,GCC5BiB,EAbA,SAACrF,GACb,OACI+B,EAAA7B,EAAAC,cAAA,WACI4B,EAAA7B,EAAAC,cAACmF,EAAD,CACIjD,QAASrC,EAAMqC,QACfjB,OAAQpB,EAAMoB,OACdK,aAAczB,EAAMyB,eAExBM,EAAA7B,EAAAC,cAACoF,EAAD,gCCNNC,oLAEE,IAAIC,EAAS/F,KAAKM,MAAM0F,MAAMC,OAAOF,OAChCA,IACDA,EAAS/F,KAAKM,MAAM4F,kBAEhBlG,KAAKM,MAAM6F,QAAQC,KAAK,UAGhCpG,KAAKM,MAAM+F,eAAeN,GAC1B/F,KAAKM,MAAMgG,UAAUP,oCAIrB,OACI1D,EAAA7B,EAAAC,cAAA,WACI4B,EAAA7B,EAAAC,cAAC8F,EAAD5G,OAAA6G,OAAA,GAAaxG,KAAKM,MAAlB,CACSqC,QAAS3C,KAAKM,MAAM+E,YACpB3D,OAAQ1B,KAAKM,MAAMoB,OACnBK,aAAc/B,KAAKM,MAAMyB,wBAnBnBnB,IAAMpB,WAyCtBiH,sBAAQ5F,YATV,SAACzB,GAAD,MAAY,CACrBiG,YAAajG,EAAMiG,YAAY1C,QAC/BjB,OAAQtC,EAAMiG,YAAY3D,OAC1BwE,gBAAiB9G,EAAME,KAAKyG,SAO5B,CAACM,mBAAgBC,cAAWvE,mBAC5B2E,IACAnH,IAHWkH,CAGOX","file":"static/js/3.7a133d36.chunk.js","sourcesContent":["import React from 'react';\r\nimport {Redirect} from \"react-router\";\r\nimport {connect} from \"react-redux\";\r\n\r\nconst mstpForRedirect = (state) => ({\r\n    isAuth: state.auth.isAuth,\r\n});\r\nexport const withAuthRedirect = (Component) => {\r\n    class RedirectComponent extends React.Component {\r\n        render() {\r\n            if (!this.props.isAuth) return <Redirect to={'/login'}/>;\r\n            return <Component {...this.props}/>\r\n        }\r\n    }\r\n\r\n    let ConectedAuthRedirectComponent = connect (mstpForRedirect)(RedirectComponent);\r\n    return ConectedAuthRedirectComponent;\r\n};\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"imgBack\":\"ProfileInfo_imgBack__1d4a8\",\"description\":\"ProfileInfo_description__2rUx4\",\"avatar\":\"ProfileInfo_avatar__1wlVP\",\"fotoProfile\":\"ProfileInfo_fotoProfile__2-wAR\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"textareaSize\":\"MyPosts_textareaSize__eV2hV\",\"myPosts\":\"MyPosts_myPosts__1u2Yu\",\"posts\":\"MyPosts_posts__vhegb\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Post_item__1xMz3\"};","import React from 'react';\r\nimport s from './ProfileInfo.module.css';\r\n\r\nclass ProfileStatus extends React.Component {\r\n    state = {\r\n        editMode: false,\r\n        status: this.props.status,\r\n    }\r\n    activateEditMode = () => {\r\n        this.setState({\r\n            editMode: true\r\n        })\r\n    }\r\n    deactivateEditMode = () => {\r\n        this.setState({\r\n            editMode: false,\r\n            status: this.props.status,\r\n        })\r\n        this.props.updateStatus(this.state.status);\r\n    }\r\n    onStatusChange = (e) => {\r\nthis.setState({status: e.currentTarget.value})\r\n    };\r\ncomponentDidUpdate(prevProps, prevState) {\r\n    if (prevProps.status !== this.props.status ) {\r\n        this.setState({\r\n            status: this.props.status\r\n        })\r\n    }\r\n    // console.log('component render')\r\n}\r\n\r\n    render() {\r\n    // console.log('render');\r\n        return (\r\n            <div>\r\n                {!this.state.editMode &&\r\n                <div>\r\n                    <span onDoubleClick={this.activateEditMode}>{this.props.status || '===='}</span>\r\n                </div>\r\n                }\r\n                {this.state.editMode &&\r\n                <div>\r\n                    <input onChange={this.onStatusChange} autoFocus={true} onBlur={this.deactivateEditMode} value={this.state.status}/>\r\n                </div>\r\n                }\r\n            </div>\r\n        )\r\n    }\r\n\r\n\r\n};\r\n\r\nexport default ProfileStatus;","import React from 'react';\r\nimport s from './ProfileInfo.module.css';\r\n// import {connect} from \"react-redux\";\r\nimport Preloader from \"../../Common/Preloader/Preloader\";\r\nimport ProfileStatus from './ProfileStatus'\r\nimport photoMan from '../../../img/images/logoMan.png'\r\n\r\n// const PersonalInfo = (props) => {\r\n//     // let {messagesList,newMessage,friends,personalInfo} = profilePage;\r\n//     return (\r\n//         <div>\r\n//             <p>Name: {props.name}</p>\r\n//             <p>City: {props.city}</p>\r\n//             <p>Date of Birth: {props.dateBirth}</p>\r\n//         </div>\r\n//     )\r\n// }\r\n\r\n\r\nconst ProfileInfo = (props) => {\r\n    if (!props.profile) {\r\n        return <Preloader/>\r\n    }\r\n    const foto = props.profile.photos.small != null\r\n        ? props.profile.photos.small\r\n        : photoMan;\r\nreturn (\r\n        <div>\r\n            <div>\r\n                <img\r\n                    src='https://images.pexels.com/photos/248797/pexels-photo-248797.jpeg?auto=compress&cs=tinysrgb&h=350'\r\n                    alt='nature' className={s.imgBack}/>\r\n            </div>\r\n            <div className={s.description}>\r\n               <div><img className={s.fotoProfile} src={foto}/>\r\n                   <div>{props.profile.fullName}</div>\r\n                   <div>{props.profile.lookingForAJob}</div>\r\n               </div>\r\n                <ProfileStatus status={props.status} updateStatus={props.updateStatus}/>\r\n            </div>\r\n        </div>)\r\n}\r\n\r\nexport default ProfileInfo;\r\n// export default ProfileInfo;","import React from 'react';\r\nimport s from './Post.module.css';\r\n\r\nconst Post = (props) => {\r\n  return (\r\n\r\n    <div className={s.item}>\r\n      <img src=\"https://skajnet.ru/wp-content/uploads/2018/07/avatarka-prikolnaya.jpg\" alt=\"\" />\r\n      {props.message}\r\n      <div>\r\n        \r\n        <span>Like</span>\r\n        { props.likeCount}\r\n      </div>\r\n    </div>\r\n\r\n  )\r\n}\r\n\r\nexport default Post;","import React from 'react';\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport {maxLengthCreator, required} from \"../../../utils/validators/validators\";\r\nimport {Textarea} from \"../../Common/FormsControls/FormsControls\";\r\n\r\nlet maxLength10=maxLengthCreator(10);\r\n\r\nconst AddPostForm = (props) => {\r\n    return (\r\n        <form onSubmit={props.handleSubmit}>\r\n            <div>\r\n                <Field component={Textarea} name='newMessage' validate={[required, maxLength10]} placeholder='Enter your post'/>\r\n            </div>\r\n            <div>\r\n                <button>Add post</button>\r\n            </div>\r\n        </form>)\r\n};\r\nexport const AddPostFormRedux = reduxForm({form: 'AddPostForm'})(AddPostForm)\r\nexport default AddPostForm\r\n\r\n// export default AddDialogForm\r\n","import React from 'react';\r\nimport s from './MyPosts.module.css';\r\nimport Post from './Post/Post';\r\nimport {AddPostFormRedux} from \"./MyPostForm\";\r\n// import {addCommentAC, updatePostAC} from \"../../../redux/profilePageReducer\";\r\n// import {connect} from \"react-redux\";\r\n// import {addMessage} from \"../../../redux/State\";\r\n\r\n\r\nconst MyPosts = (props) => {\r\n    // let {messagesList,newMessage} = messagesList\r\n    let newPostElement = React.createRef();\r\n    let postItem = props.myPost.messagesList.map((m) => <Post message={m.message} likeCount={m.likeCount}/>);\r\n\r\n    // let addPost = () => {\r\n    //     dispatch({type: 'ADD-MESSAGE'});\r\n    //     newPostElement.current.value = \" \";\r\n    // }\r\n    // let addMessage = () => {\r\n    //     let text = newPostElement.current.value;\r\n    //     let action = {type: 'UPDATE-NEW-MESSAGE', text: text};\r\n    //     dispatch(action);\r\n    // }\r\n    // let addPost = () => {\r\n    //     let comment = newPostElement.current.value;\r\n    //     let actionObj = addCommentAC(comment);\r\n    //     dispatch(actionObj);\r\n    //     newPostElement.current.value = '';\r\n    // }\r\nconst addNewPost = (value) => {\r\n    props.addPost(value.newMessage)\r\n}\r\n    return (\r\n        <div className={s.myPosts}>\r\n            <h4>My posts</h4>\r\n            <div>\r\n                {/*<div>\r\n                    <textarea ref={newPostElement}\r\n                              className={s.textareaSize}\r\n                              value={props.newMessage}\r\n                              onChange={(e)=>props.updatePost(e.currentTarget.value)}\r\n                              // onKeyPress={this.handleKeyPress}\r\n                    />\r\n                </div>\r\n                <div>\r\n                    <button onClick= {() => {props.addPost(newPostElement.current.value)}} >Add post</button>\r\n                </div>*/}\r\n                <AddPostFormRedux onSubmit={addNewPost}/>\r\n            </div>\r\n            <div className={s.posts}>\r\n                {postItem}\r\n            </div>\r\n        </div>)\r\n};\r\n\r\n\r\nexport default (MyPosts);","import React from 'react';\r\nimport s from './MyPosts.module.css';\r\nimport Post from './Post/Post';\r\nimport {addCommentAC, updatePostAC} from \"../../../redux/profilePageReducer\";\r\nimport {connect} from \"react-redux\";\r\nimport MyPosts from \"./MyPosts\";\r\n// import {addMessage} from \"../../../redux/State\";\r\n\r\n\r\nconst mstp = (state) => ({\r\n    myPost: state.profilePage,\r\n    newMessage: state.profilePage.newMessage\r\n})\r\nconst mdtp = (dispatch) => ({\r\n    addPost: (newMessage) => dispatch(addCommentAC(newMessage)),\r\n    updatePost: (textPost) => dispatch(updatePostAC(textPost))\r\n\r\n})\r\n\r\nlet MyPostsContainer = connect (mstp, mdtp)(MyPosts);\r\nexport default MyPostsContainer;","import React from 'react';\r\nimport s from './Profile.module.css';\r\n// import MyPosts from './MyPosts/MyPosts';\r\nimport ProfileInfo from \"./ProfileInfo/ProfileInfo\";\r\n// import PropTypes from 'prop-types';\r\nimport MyPostsContainer from \"./MyPosts/MyPostsContainer\";\r\n\r\nconst Profile = (props) => {\r\n    return (\r\n        <div>\r\n            <ProfileInfo\r\n                profile={props.profile}\r\n                status={props.status}\r\n                updateStatus={props.updateStatus}\r\n            />\r\n            <MyPostsContainer/>\r\n\r\n        </div>)\r\n}\r\n\r\nexport default (Profile);\r\n// export default Profile;\r\n","import React from 'react';\r\nimport {connect} from \"react-redux\";\r\nimport Profile from \"./Profile\";\r\nimport {withRouter} from \"react-router\";\r\nimport {withAuthRedirect} from \"../../hoc/withAuthRedirect\";\r\nimport {compose} from \"redux\";\r\nimport {getStatus, getUserProfile, updateStatus} from \"../../redux/profilePageReducer\";\r\n\r\n\r\nclass ProfileContainer extends React.Component {\r\n    componentDidMount() {\r\n        let userId = this.props.match.params.userId;\r\n        if (!userId) {\r\n            userId = this.props.autorizedUserId;\r\n            if (!userId) {\r\n                this.props.history.push(\"/login\")\r\n            }\r\n        }\r\n        this.props.getUserProfile(userId);\r\n        this.props.getStatus(userId);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Profile {...this.props}\r\n                         profile={this.props.profilePage}\r\n                         status={this.props.status}\r\n                         updateStatus={this.props.updateStatus}\r\n                />\r\n            </div>)\r\n    }\r\n}\r\n\r\n// let AuthRedirectComponent = withAuthRedirect(ProfileContainer)\r\n\r\n// const mstpForRedirect = (state) => ({\r\n//     isAuth: state.auth.isAuth,\r\n// })\r\n// AuthRedirectComponent = connect (mstpForRedirect)(AuthRedirectComponent)\r\n\r\nconst mstp = (state) => ({\r\n    profilePage: state.profilePage.profile,\r\n    status: state.profilePage.status,\r\n    autorizedUserId: state.auth.userId,\r\n});\r\n\r\n// let WithUrlDataContainerComponent = withRouter(AuthRedirectComponent)\r\n\r\n// export default connect(mstp, {getUserProfile})(WithUrlDataContainerComponent);\r\nexport default compose(connect(mstp,\r\n    {getUserProfile, getStatus, updateStatus}),\r\n    withRouter,\r\n    withAuthRedirect)(ProfileContainer);\r\n"],"sourceRoot":""}